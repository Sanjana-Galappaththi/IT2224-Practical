//Example 01:
//get a same two lines using fork() command.

[2021ict112@fedora ~]$ touch example1.c
[2021ict112@fedora ~]$ vi example1.c

#include<stdio.h>
#include<unistd.h>
int main()
{
	fork();
	printf("Hello world!\n");
	return 0;
}

[2021ict112@fedora ~]$ gcc example1.c -o example1
[2021ict112@fedora ~]$ ./example1
Hello world!
Hello world!


//Example 02:

[2021ict112@fedora ~]$ touch example2.c
[2021ict112@fedora ~]$ vi example2.c

#include<stdio.h>
#include<unistd.h>
int main()
{
	fork();
	fork();
	printf("Hello world!\n");
	return 0;
}

[2021ict112@fedora ~]$ gcc example2.c -o example2
[2021ict112@fedora ~]$ ./example2
Hello world!
Hello world!
Hello world!
Hello world!

//Example 03:

#include<stdio.h>
#include<unistd.h>
int main()
{
	int f=fork();
	if(f==0)
	{
		printf("I am Child!\n");
	}
	else
	{
		printf("I am Parent\n");
	}
	
	return 0;
	printf("\n");
	
}

//Example 04
//print numbers from 1 to 10 and
//1 to 5 should be print by child process
//from 6 to 10 should be parent process
//calculate summation of those numbers 

[2021ict112@fedora ~]$ vi example4.c

#include<stdio.h>
#include<unistd.h>

int main()
{
	int sum=0;
	int sum1=0;
	int sum2=0;
	int f=fork();
	if(f==0)
	{
		for(int i=1; i<=5; i++)
		{
			printf("\n %d\n",i);
			sum1=sum1+i;
			
		}
	}
	else
	{
		for(int i=6; i<=10; i++)
		{
			printf("\n%d\n",i);
			sum2=sum2+i;
			
			
		}
		
	}
	
	printf("Summation is: %d\n",sum1+sum2);
	
	
	
	
	
	return 0;
	
}

[2021ict112@fedora ~]$ gcc example4.c -o example4
[2021ict112@fedora ~]$ ./example4

6

7

8

9

10
Summation is: 40

 1

 2

 3

 4

 5
Summation is: 15



//another way:

#include<stdio.h>
#include<unistd.h>

int main()
{
	int id=fork();
	int n;
	if(id==0)
	{
		n=1;
	}
	else
	{
		n=6;
	}
	
	for(int i=n; i<n+5; i++)
	{
		printf("\n");
		
		
	}
	
	return 0;
}


	
